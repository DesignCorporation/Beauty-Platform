// i18n configuration –¥–ª—è Beauty Platform Admin Panel
// –ü–æ–¥–¥–µ—Ä–∂–∫–∞: RU (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é), EN, PL, UA

import i18n from 'i18next'
import { initReactI18next } from 'react-i18next'
import LanguageDetector from 'i18next-browser-languagedetector'

// –ò–º–ø–æ—Ä—Ç –ø–µ—Ä–µ–≤–æ–¥–æ–≤
import ruTranslations from './locales/ru.json'
import enTranslations from './locales/en.json'
import plTranslations from './locales/pl.json'
import uaTranslations from './locales/ua.json'

// –†–µ—Å—É—Ä—Å—ã –ø–µ—Ä–µ–≤–æ–¥–æ–≤
const resources = {
  ru: {
    translation: ruTranslations
  },
  en: {
    translation: enTranslations
  },
  pl: {
    translation: plTranslations
  },
  ua: {
    translation: uaTranslations
  }
}

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è i18n
i18n
  .use(LanguageDetector) // –ê–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —è–∑—ã–∫–∞ –∏–∑ –±—Ä–∞—É–∑–µ—Ä–∞
  .use(initReactI18next) // –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å React
  .init({
    resources,
    
    // –Ø–∑—ã–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    lng: 'ru',
    fallbackLng: 'ru', // Fallback –Ω–∞ —Ä—É—Å—Å–∫–∏–π
    
    // –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —è–∑—ã–∫–∏
    supportedLngs: ['ru', 'en', 'pl', 'ua'],
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è —è–∑—ã–∫–∞
    detection: {
      // –ü–æ—Ä—è–¥–æ–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ —è–∑—ã–∫–∞
      order: ['localStorage', 'navigator', 'htmlTag'],
      
      // –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —è–∑—ã–∫–∞
      caches: ['localStorage'],
      
      // –ö–ª—é—á –¥–ª—è localStorage
      lookupLocalStorage: 'beauty-platform-language',
      
      // –ò—Å–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö –ø—É—Ç–µ–π
      excludeCacheFor: ['cimode']
    },
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–Ω—Ç–µ—Ä–ø–æ–ª—è—Ü–∏–∏
    interpolation: {
      escapeValue: false // React —É–∂–µ –±–µ–∑–æ–ø–∞—Å–µ–Ω –æ—Ç XSS
    },
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ç–ª–∞–¥–∫–∏ (—Ç–æ–ª—å–∫–æ –≤ dev —Ä–µ–∂–∏–º–µ)
    debug: false, // typeof process !== 'undefined' && process.env?.NODE_ENV === 'development',
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏
    load: 'languageOnly', // –ó–∞–≥—Ä—É–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ —è–∑—ã–∫ –±–µ–∑ —Ä–µ–≥–∏–æ–Ω–∞ (en, –∞ –Ω–µ en-US)
    
    // –ü—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞ –∏–º–µ–Ω (–º–æ–∂–Ω–æ —Ä–∞—Å—à–∏—Ä–∏—Ç—å –≤ –±—É–¥—É—â–µ–º)
    defaultNS: 'translation',
    ns: ['translation'],
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–µ–∞–∫—Ç–∞
    react: {
      useSuspense: false // –û—Ç–∫–ª—é—á–∞–µ–º Suspense –¥–ª—è –±–æ–ª–µ–µ –ø—Ä–æ—Å—Ç–æ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
    }
  })

export default i18n

// –≠–∫—Å–ø–æ—Ä—Ç —Ç–∏–ø–æ–≤ –¥–ª—è TypeScript
export type SupportedLanguage = 'ru' | 'en' | 'pl' | 'ua'

// –•–µ–ª–ø–µ—Ä –¥–ª—è —Å–º–µ–Ω—ã —è–∑—ã–∫–∞
export const changeLanguage = async (language: SupportedLanguage): Promise<void> => {
  await i18n.changeLanguage(language)
}

// –•–µ–ª–ø–µ—Ä –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ —è–∑—ã–∫–∞
export const getCurrentLanguage = (): SupportedLanguage => {
  return i18n.language as SupportedLanguage || 'ru'
}

// –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —è–∑—ã–∫–æ–≤ —Å –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º—ã–º–∏ –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏
export const availableLanguages = [
  { code: 'ru', name: '–†—É—Å—Å–∫–∏–π', flag: 'üá∑üá∫' },
  { code: 'en', name: 'English', flag: 'üá∫üá∏' },
  { code: 'pl', name: 'Polski', flag: 'üáµüá±' },
  { code: 'ua', name: '–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞', flag: 'üá∫üá¶' }
] as const