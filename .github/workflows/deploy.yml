name: 🚀 Beauty Platform CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18'
  PRODUCTION_SERVER: '135.181.156.117'

jobs:
  # 🧪 CI: Continuous Integration
  test:
    name: 🧪 Test & Build
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: 📦 Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 8

    - name: 📦 Install dependencies
      run: pnpm install --frozen-lockfile

    - name: 🔍 TypeScript check
      run: pnpm run typecheck

    - name: 🧹 Lint check
      run: pnpm run lint

    - name: 🧪 Run tests
      run: pnpm run test

    - name: 📦 Build project
      run: pnpm run build

    - name: 📊 Build status
      run: |
        echo "✅ CI успешно завершен!"
        echo "📦 Проект собран и готов к деплою"

  # 🚀 CD: Continuous Deployment (только для main ветки)
  deploy:
    name: 🚀 Deploy to Production
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
    - name: 🚀 Trigger production deployment
      run: |
        echo "🚀 Запускаем deployment на production сервере..."

        # Отправляем webhook на production сервер
        curl -X POST \
          -H "Content-Type: application/json" \
          -H "X-GitHub-Event: push" \
          -H "Authorization: Bearer ${{ secrets.WEBHOOK_SECRET }}" \
          -d '{
            "repository": {
              "name": "${{ github.repository }}",
              "full_name": "${{ github.repository }}"
            },
            "ref": "${{ github.ref }}",
            "head_commit": {
              "id": "${{ github.sha }}",
              "message": "${{ github.event.head_commit.message }}",
              "author": {
                "name": "${{ github.event.head_commit.author.name }}",
                "email": "${{ github.event.head_commit.author.email }}"
              }
            },
            "pusher": {
              "name": "${{ github.actor }}"
            }
          }' \
          "https://${{ env.PRODUCTION_SERVER }}:3333/webhook/deploy" || \
        curl -X POST \
          -H "Content-Type: application/json" \
          -H "X-GitHub-Event: push" \
          -H "Authorization: Bearer ${{ secrets.WEBHOOK_SECRET }}" \
          -d '{
            "repository": {
              "name": "${{ github.repository }}",
              "full_name": "${{ github.repository }}"
            },
            "ref": "${{ github.ref }}",
            "head_commit": {
              "id": "${{ github.sha }}",
              "message": "${{ github.event.head_commit.message }}",
              "author": {
                "name": "${{ github.event.head_commit.author.name }}",
                "email": "${{ github.event.head_commit.author.email }}"
              }
            },
            "pusher": {
              "name": "${{ github.actor }}"
            }
          }' \
          "http://${{ env.PRODUCTION_SERVER }}:3333/webhook/deploy"

        echo "✅ Deployment webhook отправлен на production сервер"
        echo "🔍 Проверьте логи на сервере: ./beauty-dev.sh logs webhook"

  # 📊 Status notification
  notify:
    name: 📊 Deployment Status
    runs-on: ubuntu-latest
    needs: [test, deploy]
    if: always()

    steps:
    - name: 📊 Report status
      run: |
        if [[ "${{ needs.test.result }}" == "success" && "${{ needs.deploy.result }}" == "success" ]]; then
          echo "✅ CI/CD Pipeline успешно завершен!"
          echo "🌐 Production URLs:"
          echo "   Landing: https://beauty.designcorp.eu"
          echo "   CRM: https://salon.beauty.designcorp.eu"
          echo "   Admin: https://admin.beauty.designcorp.eu"
          echo "   Client: https://client.beauty.designcorp.eu"
        elif [[ "${{ needs.test.result }}" == "failure" ]]; then
          echo "❌ CI тесты провалились! Deployment отменен."
          exit 1
        elif [[ "${{ needs.deploy.result }}" == "failure" ]]; then
          echo "⚠️ CI прошел, но deployment не удался!"
          echo "🔍 Проверьте webhook endpoint на сервере"
          exit 1
        else
          echo "⚠️ Неожиданный статус pipeline"
          exit 1
        fi