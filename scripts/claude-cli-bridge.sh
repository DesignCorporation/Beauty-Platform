#!/bin/bash

# Claude CLI Bridge - –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Ä–µ–∞–ª—å–Ω—ã–º Claude Code CLI
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —á–∏—Ç–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –æ—Ç–≤–µ—á–∞–µ—Ç —á–µ—Ä–µ–∑ Claude CLI

CHAT_DIR="/root/beauty-platform/ai-chat"
CLAUDE_INBOX="$CHAT_DIR/claude-inbox.txt"
CONVERSATION_LOG="$CHAT_DIR/conversation.log" 
CLAUDE_RESPONSES="$CHAT_DIR/claude-responses.txt"

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –µ—Å–ª–∏ –Ω–µ—Ç
mkdir -p "$CHAT_DIR"
touch "$CLAUDE_INBOX" "$CONVERSATION_LOG"

# –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log_message() {
    local timestamp=$(date '+%H:%M:%S %d.%m.%Y')
    local sender="$1"
    local message="$2"
    
    echo "[$timestamp] $sender: $message" >> "$CONVERSATION_LOG"
    echo -e "\033[1;34m[$timestamp] Claude CLI:\033[0m $message"
}

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –¥—Ä—É–≥–æ–º—É AI
send_to_gemini() {
    local message="$1"
    local timestamp=$(date '+%H:%M:%S')
    
    echo "[$timestamp] FROM_CLAUDE: $message" >> "$CHAT_DIR/gemini-inbox.txt"
    log_message "üì®‚ÜíGemini" "$message"
}

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è Claude
process_claude_messages() {
    if [ ! -s "$CLAUDE_INBOX" ]; then
        return
    fi
    
    echo -e "\n\033[1;33müì¨ Claude –ø–æ–ª—É—á–∏–ª –Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è:\033[0m"
    
    while IFS= read -r line; do
        if [ -n "$line" ]; then
            # –ò–∑–≤–ª–µ–∫–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ (—É–±–∏—Ä–∞–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ)
            message=$(echo "$line" | sed 's/\[.*\] FROM_.*: //')
            
            echo -e "\033[1;36müì® –í—Ö–æ–¥—è—â–µ–µ:\033[0m $message"
            
            # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –æ—Ç–≤–µ—Ç—ã Claude
            # –ò–ª–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å –Ω–∞—Å—Ç–æ—è—â–∏–º Claude CLI
            
            # –ü—Ä–æ—Å—Ç–æ–π –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫ —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º Beauty Platform
            local response=""
            case "$message" in
                *"–∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä"*|*"–º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å"*)
                    response="–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ Beauty Platform –æ—Å–Ω–æ–≤–∞–Ω–∞ –Ω–∞ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–∞—Ö: Auth Service (6021), CRM API (6022), Admin Panel (6002). Tenant isolation —á–µ—Ä–µ–∑ tenantPrisma(tenantId) –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å. üèóÔ∏è"
                    ;;
                *"–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç"*|*"–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏"*)
                    response="–î–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é: 1) Redis –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è CRM –¥–∞–Ω–Ω—ã—Ö, 2) GraphQL –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤, 3) Connection pooling –¥–ª—è –ë–î, 4) CDN –¥–ª—è —Å—Ç–∞—Ç–∏–∫–∏. üöÄ"
                    ;;
                *"–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç"*|*"security"*)
                    response="Security –≤ Beauty Platform: JWT —Å httpOnly cookies, MFA —á–µ—Ä–µ–∑ TOTP, tenant isolation, CSRF protection, rate limiting. –í—Å–µ –ª–æ–≥–∏ –≤ security_events —Ç–∞–±–ª–∏—Ü–µ. üõ°Ô∏è"
                    ;;
                *"–±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö"*|*"database"*|*"–ë–î"*)
                    response="PostgreSQL beauty_platform_new —Å –ø–æ–ª–Ω–æ–π tenant –∏–∑–æ–ª—è—Ü–∏–µ–π. Prisma ORM, –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏, –æ—Ç–¥–µ–ª—å–Ω–∞—è –ë–î –¥–ª—è –∞—É–¥–∏—Ç–∞. –ö–∞–∂–¥—ã–π —Å–∞–ª–æ–Ω = –æ—Ç–¥–µ–ª—å–Ω—ã–π tenantId. üóÑÔ∏è"
                    ;;
                *"–∫–∞–ª–µ–Ω–¥–∞—Ä"*|*"–∑–∞–ø–∏—Å–∏"*|*"appointment"*)
                    response="CRM –∫–∞–ª–µ–Ω–¥–∞—Ä—å –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–µ–∞–ª—å–Ω—ã–µ –∑–∞–ø–∏—Å–∏ –∏–∑ –ë–î. –¶–≤–µ—Ç–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —Å—Ç–∞—Ç—É—Å–æ–≤, –º–∞—Å—Ç–µ—Ä–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –∫–æ–ª–æ–Ω–∫–∞—Ö, drag&drop –¥–ª—è –ø–µ—Ä–µ–Ω–æ—Å–∞. API: GET/POST /api/appointments. üìÖ"
                    ;;
                *"–º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥"*|*"–ª–æ–≥–∏"*)
                    response="–°–∏—Å—Ç–µ–º–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: health checks –∫–∞–∂–¥—ã–µ 2 –º–∏–Ω—É—Ç—ã, Telegram –∞–ª–µ—Ä—Ç—ã, PM2 –¥–ª—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤, systemd –¥–ª—è –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞. –õ–æ–≥–∏ –≤ /root/beauty-platform/logs/. üìä"
                    ;;
                *)
                    response="–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –≤–æ–ø—Ä–æ—Å –ø–æ Beauty Platform! ü§î –î–∞–≤–∞–π—Ç–µ –¥–µ—Ç–∞–ª—å–Ω–µ–µ –æ–±—Å—É–¥–∏–º: –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É, –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å, –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏–ª–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ñ–∏—á–∏? –ì–æ—Ç–æ–≤ –ø–æ–º–æ—á—å —Å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º–∏ –¥–µ—Ç–∞–ª—è–º–∏. üí°"
                    ;;
            esac
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
            if [ -n "$response" ]; then
                log_message "üß† Claude" "$response"
                send_to_gemini "$response"
                echo "$response" >> "$CLAUDE_RESPONSES"
            fi
        fi
    done < "$CLAUDE_INBOX"
    
    # –û—á–∏—â–∞–µ–º inbox
    > "$CLAUDE_INBOX"
}

# Daemon —Ä–µ–∂–∏–º - –ø–æ—Å—Ç–æ—è–Ω–Ω–æ —Å–ª—É—à–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
daemon_mode() {
    echo -e "\033[1;32mü§ñ Claude CLI Bridge –∑–∞–ø—É—â–µ–Ω –≤ daemon —Ä–µ–∂–∏–º–µ\033[0m"
    echo -e "\033[90m–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏\033[0m"
    echo -e "\033[1;37m–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–æ–π: $CHAT_DIR\033[0m"
    echo ""
    
    while true; do
        process_claude_messages
        sleep 3
    done
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–¥–Ω–æ–≥–æ —Ä–∞–∑–∞
check_once() {
    echo -e "\033[1;33müîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è Claude...\033[0m"
    process_claude_messages
    
    if [ -s "$CLAUDE_RESPONSES" ]; then
        echo -e "\n\033[1;37müìù –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—Ç–≤–µ—Ç—ã Claude:\033[0m"
        tail -5 "$CLAUDE_RESPONSES"
    fi
}

# –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
show_stats() {
    echo -e "\033[1;36müìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ Claude CLI Bridge\033[0m"
    echo -e "================================"
    echo -e "üì¨ –°–æ–æ–±—â–µ–Ω–∏–π –≤ inbox: $(wc -l < "$CLAUDE_INBOX" 2>/dev/null || echo 0)"
    echo -e "üí¨ –í—Å–µ–≥–æ –≤ –∏—Å—Ç–æ—Ä–∏–∏: $(wc -l < "$CONVERSATION_LOG" 2>/dev/null || echo 0)" 
    echo -e "üìù –û—Ç–≤–µ—Ç–æ–≤ Claude: $(wc -l < "$CLAUDE_RESPONSES" 2>/dev/null || echo 0)"
    echo -e "üïê –ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: $(date -r "$CONVERSATION_LOG" 2>/dev/null || echo "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö")"
}

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
case "${1:-daemon}" in
    "daemon")
        daemon_mode
        ;;
    "check")
        check_once
        ;;
    "stats")
        show_stats
        ;;
    "help")
        echo "Claude CLI Bridge - –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–æ–π"
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:"
        echo "  ./claude-cli-bridge.sh daemon  - –∑–∞–ø—É—Å–∫ –≤ —Ñ–æ–Ω–µ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)"
        echo "  ./claude-cli-bridge.sh check   - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–¥–∏–Ω —Ä–∞–∑"  
        echo "  ./claude-cli-bridge.sh stats   - –ø–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"
        ;;
    *)
        echo "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: daemon, check, stats, help"
        ;;
esac